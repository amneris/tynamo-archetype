<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>${groupId}</groupId>
	<artifactId>${artifactId}</artifactId>
	<packaging>war</packaging>
	<version>${version}</version>
	<name>${artifactId} - My Tynamo project</name>
	<url>http://tynamo.org/</url>

<!-- #set( $D = '$' ) -->

	<properties>
		<tynamo-version>0.5.1-SNAPSHOT</tynamo-version>
		<tapestry.app-package>${package}</tapestry.app-package>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

<!--
	<scm>
		<connection></connection>    <!- read-only ->
		<url></url>
		<developerConnection></developerConnection> <!- write-read ->
	</scm>
-->

	<prerequisites>
		<maven>3.0.3</maven>
	</prerequisites>

	<build>
		<finalName>${artifactId}</finalName>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<directory>src/main/filtered-resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<optimize>true</optimize>
				</configuration>
			</plugin>

			<!-- Run the application using "mvn jetty:run" -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>7.6.5.v20120716</version>
				<configuration>
					<systemProperties>
						<systemProperty>
							<name>tapestry.execution-mode</name>
							<value>development</value>
						</systemProperty>
					</systemProperties>
					<webAppConfig>
						<contextPath>/${project.build.finalName}</contextPath>
					</webAppConfig>
				</configuration>
			</plugin>

			<!-- This changes the WAR file packaging so that what would normally go into WEB-INF/classes
				 is instead packaged as WEB-INF/lib/${artifactId}.jar. This is necessary for Tapestry
				 to be able to search for page and component classes at startup. Only
				 certain application servers require this configuration, please see the documentation
				 at the Tapestry 5 project page (http://tapestry.apache.org/tapestry5/).
			 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Implementation-Build>${buildNumber}</Implementation-Build>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<!-- This gets the plugin to clean up the cobertura.ser file left in the root directory. -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.5.1</version>
				<executions>
					<execution>
						<id>clean</id>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Provides build number and timestamp based on the scm configuration -->
<!--
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.1</version>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
-->

            <plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>hibernate3-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<components>
						<component>
							<name>hbm2ddl</name>
							<implementation>annotationconfiguration</implementation>
						</component>
					</components>
					<componentProperties>
						<configurationfile>target/classes/hibernate.dev.cfg.xml</configurationfile>
						<export>false</export>
						<outputfilename>${project.version}.ddl.sql</outputfilename>

						<scan-classes>true</scan-classes>
						<scan-test-classes>false</scan-test-classes>

						<drop>true</drop>
						<create>true</create>

						<!-- when this is true then failing drops cause a   -->
						<!-- build failure. this would happen when the      -->
						<!-- database is empty or if adding a new table.    -->
						<!-- normally true for postgres, false for hsql.    -->
						<!-- when adding new tables, etc. just run          -->
						<!-- mvn hibernate3:hbm2ddl twice to get past the   -->
						<!-- missing table errors.                          -->
						<haltonerror>${hbmtool.haltOnError}</haltonerror>
					</componentProperties>
				</configuration>

				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>5.1.17</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<!-- *
					 * beanstalker: http://beanstalker.ingenieux.com.br/usage.html
					 *
					 * all-in-one:         mvn clean package beanstalk:upload-source-bundle beanstalk:create-application-version beanstalk:update-environment -DskipTests=true
					 *
					 * check availability: mvn beanstalk:check-availability
					 * packaging:          mvn clean package -DskipTests=true
					 * upload to S3:       mvn buildnumber:create beanstalk:upload-source-bundle
					 * create app version: mvn buildnumber:create beanstalk:create-application-version
					 * create environment: mvn buildnumber:create beanstalk:create-environment
					 * -->
				<groupId>br.com.ingenieux</groupId>
				<artifactId>beanstalk-maven-plugin</artifactId>
				<version>0.2.6</version>
				<configuration>
					<accessKey>${aws.accessId}</accessKey>
					<applicationName>${project.artifactId}</applicationName>
					<applicationDescription>${project.name} v${project.version}</applicationDescription>
					<autoCreateApplication>false</autoCreateApplication>
					<environmentName>${project.artifactId}-dev</environmentName>
					<s3Bucket>YOUR S3 BEANSTALK BUCKET</s3Bucket>
					<s3Key>${project.build.finalName}-${project.version}-r${buildNumber}.${project.packaging}</s3Key>
					<versionLabel>${project.version}-r${buildNumber}</versionLabel>
				</configuration>
<!--
				<dependencies>
					<dependency>
						<groupId>com.amazonaws</groupId>
						<artifactId>aws-java-sdk</artifactId>
						<version>1.3.7</version>
					</dependency>
				</dependencies>
-->
			</plugin>


		</plugins>

	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<dependencyDetailsEnabled>false</dependencyDetailsEnabled>
					<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.5.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.7.2</version>
				<configuration>
					<systemPropertyVariables>
						<tapestry.execution-mode>Qa</tapestry.execution-mode>
					</systemPropertyVariables>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<dependencies>

		<dependency>
			<groupId>org.tynamo</groupId>
			<artifactId>tapestry-model-hibernate</artifactId>
			<version>${D}{tynamo-version}</version>
		</dependency>

		<dependency>
			<groupId>org.tynamo</groupId>
			<artifactId>tapestry-model-test</artifactId>
			<version>${D}{tynamo-version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.tynamo</groupId>
			<artifactId>tapestry-resteasy</artifactId>
			<version>0.3.0</version>
		</dependency>

		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jackson-provider</artifactId>
			<version>2.3.0.GA</version>
		</dependency>

		<!--Add for the security-->
		<dependency>
			<groupId>org.tynamo</groupId>
			<artifactId>tapestry-security</artifactId>
			<version>0.4.4</version>
		</dependency>

		<dependency>
			<groupId>org.tynamo</groupId>
			<artifactId>tapestry-routing</artifactId>
			<version>0.0.4</version>
		</dependency>

		<dependency>
			<groupId>org.tynamo</groupId>
			<artifactId>tapestry-exceptionpage</artifactId>
			<version>0.1.2</version>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.2.125</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.17</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-c3p0</artifactId>
			<version>3.6.0.Final</version>
		</dependency>

		<!-- Provided by the servlet container, but sometimes referenced in the application code. -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>

		<!-- Provide dependency to the Tapestry javadoc taglet which replaces the Maven component report -->
		<dependency>
			<groupId>org.apache.tapestry</groupId>
			<artifactId>tapestry-javadoc</artifactId>
			<version>5.3.2</version>
			<scope>provided</scope>
		</dependency>

	</dependencies>

	<!--
	IMPORTANT NOTE:

	Configuring repositories is against Maven best practices. If you have
	a repository manager in use, remove this section and configure your
	repository manager to proxy these repositories instead.
	-->
	<repositories>
		<!-- Don't use snapshots unless absolutely necessary -->
		<repository>
			<id>codehaus-nexus-snapshots</id>
			<name>Codehaus Nexus Snapshots</name>
			<url>https://nexus.codehaus.org/content/groups/snapshots-group/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>

		<repository>
			<id>repository.jboss.org</id>
			<url>https://repository.jboss.org/nexus/content/repositories/releases</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

		<!--
			little hack to disable java.net repositories because they are not working
			and they corrupt your local repo.
		-->
		<repository>
			<id>maven-repository.dev.java.net</id>
			<url>https://maven-repository.dev.java.net/nonav/repository</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>java.net</id>
			<url>https://maven-repository.dev.java.net/nonav/repository</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

	</repositories>

	<profiles>
	</profiles>

</project>
